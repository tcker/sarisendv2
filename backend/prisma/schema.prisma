// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// TO RUN WITH NEW SCHEMAS
// npx prisma format
// npx prisma generate
// npx prisma migrate dev --name <name-of-your-new-schema-comment>

// TO PUSH PRISMA CONSOLE
// 

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  wallet       String?       @unique
  name         String?
  createdAt    DateTime      @default(now())
  transactions Transaction[] @relation("UserTransactions")
}

model Merchant {
  id           String        @id @default(uuid())
  wallet       String?       @unique
  businessName String
  createdAt    DateTime      @default(now())
  transactions Transaction[] @relation("MerchantTransactions")
}

model Transaction {
  id        String @id @default(uuid())
  receiptId String @unique

  userId     String
  merchantId String
  amount     Float
  token      String // APT, USDT, etc.
  product    String // e.g., Coffee, Service, etc.
  currency   String // PHP, USD, etc.
  status     TxStatus
  createdAt  DateTime @default(now())

  user     User     @relation("UserTransactions", fields: [userId], references: [id])
  merchant Merchant @relation("MerchantTransactions", fields: [merchantId], references: [id])
}

enum TxStatus {
  SUCCESS
  FAILED
}
